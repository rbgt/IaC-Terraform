name: Activate Terraform Script though Github Actions

on: workflow_dispatch

permissions:
  id-token: write # Require write permission to Fetch an OIDC token.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Terraform-Init-Plan:
    environment: azure-sp-secrets
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
        enable-AzPSSession: true

    - uses: actions/checkout@v4

    - name: backend state configuration and environment variables
      run: |
        RESOURCE_GROUP_NAME="rg-shared"
        STORAGE_ACCOUNT_NAME="tfstateblobproject"
        CONTAINER_NAME="tfstatecontainer"
        ACCOUNT_KEY=$(az storage account keys list --resource-group $RESOURCE_GROUP_NAME --account-name $STORAGE_ACCOUNT_NAME --query '[0].value' -o tsv)
        echo "export ARM_ACCESS_KEY=$ACCOUNT_KEY" >> $GITHUB_ENV

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init and Plan
      run: |
          terraform init
          terraform plan -out tfplanState

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: tfplanState
  
  Terraform-Apply:
    environment: deployment-approval
    runs-on: ubuntu-latest
    needs: Terraform-Init-Plan
    
    steps:
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
        enable-AzPSSession: true

    - uses: actions/checkout@v4

    - name: Download Terraform Plan
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan

    - run: terraform apply tfplanState
          